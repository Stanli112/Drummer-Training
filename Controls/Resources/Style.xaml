<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CoordinationTraining.Controls.Resources"
                    xmlns:v="clr-namespace:System;assembly=mscorlib">

    <SolidColorBrush x:Key="HiHat_CB"       Color="#FFFFFF"/>
    <SolidColorBrush x:Key="HightTom_CB"    Color="#E1E1E1"/>
    <SolidColorBrush x:Key="MidTom_CB"      Color="#FFFFFF"/>
    <SolidColorBrush x:Key="Snare_CB"       Color="#C8C8C8"/>
    <SolidColorBrush x:Key="FloorTom_CB"    Color="#AFAFAF"/>
    <SolidColorBrush x:Key="BassDrum_CB"    Color="#969696"/>

    <Style x:Key="GridEventStyle" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.4"/>
                <Setter Property="Background" Value="#2196F3"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <v:Double x:Key="TactSizeHeight">220</v:Double>
    <v:Double x:Key="TactSizeWidth">200</v:Double>


    <v:Double x:Key="CustomTactSizeHeight">350</v:Double>
    
    <GridLength x:Key="TactSizeHeightForGrid">300</GridLength>



    <Style TargetType="{x:Type TextBlock}" x:Key="tbSettingsMenu">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Width" Value="200"/>
    </Style>


    <Style TargetType="{x:Type TextBox}" x:Key="TbMinimalBase" >
        <Setter Property="BorderBrush" Value="#67676B"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TbMinManageBarCount" BasedOn="{StaticResource TbMinimalBase}">
        <Setter Property="FontSize" Value="22"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TbMinimalStyle" BasedOn="{StaticResource TbMinimalBase}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnTitle">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#137CD2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#0062B8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnManageBarMinus">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid >
                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"></Rectangle>
                        <Rectangle Height="1.5" Width="13" Fill="#2196F3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnAddRhythm">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid >
                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"></Rectangle>
                        <Rectangle Height="2" Width="20" Fill="#2196F3"/>
                        <Rectangle Height="20" Width="2" Fill="#2196F3"/>

                        <Grid Height="17" Background="#2D2D30" Width="13" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                        <TextBlock Text="Р" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                       FontSize="22" FontWeight="DemiBold" Foreground="Orange" Margin="0, 0, 0,-5"
                                       />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnSave">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid >

                        <Rectangle x:Name="mainBorder" Fill="#2196F3" Width="24" Height="25" RadiusX="3" RadiusY="3" />

                        <Rectangle x:Name="TopBorder" Fill="#3E3E42" Width="16" Height="8" RadiusX="2" RadiusY="2" 
                                       VerticalAlignment="Top" Margin="0, 4, 0, 0"/>
                        <Rectangle x:Name="BottomBorder" Fill="#3E3E42" Width="20" Height="10" RadiusX="3" RadiusY="3" 
                                       VerticalAlignment="Bottom" Margin="0, 0, 0, 5"/>

                        <Polygon Fill="#3E3E42" Points="20,0,   30,0,   30,9"/>
                        <Polyline x:Name="smallBorder" Stroke="#2196F3" Points="19,6,   19,10"  StrokeThickness="1.5"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="mainBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="TopBorder" Value="#1E1E1E"/>
                            <Setter Property="Fill" TargetName="BottomBorder" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <!--<Setter Property="Fill" TargetName="smallBorder" Value="Green"/>-->
                            <Setter Property="Fill" TargetName="mainBorder" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Fill" TargetName="smallBorder" Value="Brown"/>-->
                            <Setter Property="Fill" TargetName="mainBorder" Value="Brown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type Button}" x:Key="BtnSaveRhythm">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid >

                        <Rectangle x:Name="mainBorder" Fill="#2196F3" Width="35" Height="35" RadiusX="5" RadiusY="5" />

                        <Rectangle x:Name="TopBorder" Fill="#2D2D30" Width="20" Height="12" RadiusX="2" RadiusY="2" 
                                       VerticalAlignment="Top" Margin="0, 3, 0, 0"/>
                        <Rectangle x:Name="BottomBorder" Fill="#2D2D30" Width="26" Height="17" RadiusX="3" RadiusY="3" 
                                       VerticalAlignment="Bottom" Margin="0, 0, 0, 5"/>

                        <Polygon Fill="#2D2D30" Points="27, 0, 40, 0, 40, 12"/>
                        <Polygon x:Name="smallBorder" Fill="#2196F3" Points="23, 4, 23, 14, 26, 14, 26, 4"/>

                        <Grid Height="19" Background="#2D2D30" Width="14" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                        <TextBlock Text="Р" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                       FontSize="22" FontWeight="DemiBold" Foreground="Orange" Margin="0, 0, 0,-5" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="mainBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="TopBorder" Value="#1E1E1E"/>
                            <Setter Property="Fill" TargetName="BottomBorder" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="smallBorder" Value="Green"/>
                            <Setter Property="Fill" TargetName="mainBorder" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="smallBorder" Value="Brown"/>
                            <Setter Property="Fill" TargetName="mainBorder" Value="Brown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnAddBreak">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid >
                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"></Rectangle>
                        <Rectangle Height="2" Width="20" Fill="#2196F3"/>
                        <Rectangle Height="20" Width="2" Fill="#2196F3"/>

                        <Grid Height="18" Background="#2D2D30" Width="13" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                        <TextBlock Text="С" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                       FontSize="22" FontWeight="DemiBold" Foreground="Orange" Margin="0, 0, 0,-5"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnSaveBreak">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid >

                        <Rectangle x:Name="mainBorder" Fill="#2196F3" Width="35" Height="35" RadiusX="5" RadiusY="5" />

                        <Rectangle x:Name="TopBorder" Fill="#2D2D30" Width="20" Height="12" RadiusX="2" RadiusY="2" 
                                       VerticalAlignment="Top" Margin="0, 3, 0, 0"/>
                        <Rectangle x:Name="BottomBorder" Fill="#2D2D30" Width="26" Height="17" RadiusX="3" RadiusY="3" 
                                       VerticalAlignment="Bottom" Margin="0, 0, 0, 5"/>

                        <Polygon Fill="#2D2D30" Points="27, 0, 40, 0, 40, 12"/>
                        <Polygon x:Name="smallBorder" Fill="#2196F3" Points="23, 4, 23, 14, 26, 14, 26, 4"/>

                        <Grid Height="19" Background="#2D2D30" Width="14" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                        <TextBlock Text="С" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                       FontSize="22" FontWeight="DemiBold" Foreground="Orange" Margin="0, 0, 0,-5" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="mainBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="TopBorder" Value="#1E1E1E"/>
                            <Setter Property="Fill" TargetName="BottomBorder" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="smallBorder" Value="Green"/>
                            <Setter Property="Fill" TargetName="mainBorder" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="smallBorder" Value="Brown"/>
                            <Setter Property="Fill" TargetName="mainBorder" Value="Brown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnManageBarPlus">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid >
                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"></Rectangle>
                        <Rectangle Height="1" Width="13" Fill="#2196F3"/>
                        <Rectangle Height="13" Width="1" Fill="#2196F3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnManageRightMenu">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid Width="30" Height="30">
                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>
                        <Rectangle Margin="10,20,10,0" Height="2"  VerticalAlignment="Top" Fill="#2196F3"/>
                        <Rectangle Margin="7,15,7,0" Height="2"  VerticalAlignment="Top" Fill="#2196F3"/>
                        <Rectangle Margin="10,10,10,0" Height="2"  VerticalAlignment="Top" Fill="#2196F3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnRandom">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid Width="25" Height="25" RenderTransformOrigin=".5,.5">

                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>
                        <Grid Background="#3E3E42" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,6,0,0"/>
                        <Polygon x:Name="border2" Fill="#2196F3" Points="0, 0, 6, 6, 12, 0" Margin="1,0,0,0">
                            <Polygon.RenderTransform>
                                <RotateTransform Angle="40"></RotateTransform>
                            </Polygon.RenderTransform>
                        </Polygon>

                        <Grid.RenderTransform>
                            <RotateTransform x:Name="AnimatedRotateTransform" Angle="0"/>
                        </Grid.RenderTransform>

                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="MouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="AnimatedRotateTransform" 
                                                             Storyboard.TargetProperty="Angle" 
                                                             By="10" To="-360" Duration="0:0:0.5" 
                                                             FillBehavior="Stop"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Stroke" TargetName="border2" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                            <Setter Property="Stroke" TargetName="border2" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                            <Setter Property="Stroke" TargetName="border2" Value="Brown"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnCheckBox_False">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid Width="25" Height="25" RenderTransformOrigin=".5,.5">

                        <Rectangle x:Name="border" Stroke="#2196F3" Width="20" Height="20" RadiusX="5" RadiusY="5" StrokeThickness="2"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnCheckBox_True">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid Width="25" Height="25" RenderTransformOrigin=".5,.5">

                        <Rectangle x:Name="border" Stroke="#2196F3" Width="20" Height="20" RadiusX="5" RadiusY="5" StrokeThickness="2"/>

                        <Polyline Stroke="#00BC00" Points="7,8,   12,15,  25,0"  StrokeThickness="3"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnPlay">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid Width="30" Height="30" RenderTransformOrigin=".5,.5">

                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>
                        <Polygon x:Name="border2" Fill="#2196F3" Points="0, 0, 0, 14, 12, 7" 
                                     VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,0,0,0"/>


                        <!--<Grid.RenderTransform>
                                <RotateTransform x:Name="AnimatedRotateTransform" Angle="0"/>
                            </Grid.RenderTransform>

                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="MouseDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="AnimatedRotateTransform" 
                                                             Storyboard.TargetProperty="Angle" 
                                                             By="10" To="-360" Duration="0:0:0.5" 
                                                             FillBehavior="Stop"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>-->
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Stroke" TargetName="border2" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                            <Setter Property="Fill" TargetName="border2" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                            <Setter Property="Fill" TargetName="border2" Value="Brown"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnNew">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid Width="25" Height="25" RenderTransformOrigin=".5,.5">

                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>
                        <TextBlock x:Name="text" Text="N" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       FontSize="16" Foreground="#2196F3" FontWeight="Bold" Margin="0,0,0,2"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                            <Setter Property="Foreground" TargetName="text" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                            <Setter Property="Foreground" TargetName="text" Value="Brown"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnPlayMetronom">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Grid Width="30" Height="30">

                        <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>

                        <Polygon Fill="Orange" Points="0, 0, 0, 10, 7, 5" 
                                     VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,0,0"/>

                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20">
                            <Polyline Stroke="Orange" Points="4,19,  4,4,  10,12,  16,4,  16,19" StrokeThickness="2"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="border" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnTaskCollRemove">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#3E3E42"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#0062B8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BtnMain">
        <Setter Property="Width" Value="300"/>
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="Foreground" Value="#2196F3"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#323232"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#262626"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="BarMenuLbl">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="MainLbl">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="100"/>
    </Style>
    
</ResourceDictionary>