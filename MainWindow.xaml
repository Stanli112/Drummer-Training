<Window x:Class="CoordinationTraining.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:CoordinationTraining"
        mc:Ignorable="d"
        Closed="Window_Closed"
        MinWidth="1200" MinHeight="600"
        Title="MyManager" Height="800" Width="1500"
        Background="#3E3E42"
        WindowStyle="None" ResizeMode="NoResize">
    
    <Window.Resources>
        <Storyboard x:Key="OpenTaskColl">
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="GridRightMenu" Duration="0:0:0.3" To="270" />
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="GridHand" Duration="0:0:0.3" To="1500" />
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="GridLeg" Duration="0:0:0.3" To="1500" />
        </Storyboard>
        <Storyboard x:Key="CloseTaskColl">
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="GridRightMenu" Duration="0:0:0.3" To="0" />
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="GridHand" Duration="0:0:0.3" To="1230" />
            <DoubleAnimation Storyboard.TargetProperty="Width" 
                             Storyboard.TargetName="GridLeg" Duration="0:0:0.3" To="1230" />
        </Storyboard>

        <Style TargetType="{x:Type TextBlock}" x:Key="tbSettingsMenu">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Width" Value="200"/>
        </Style>
        
        
        <Style TargetType="{x:Type TextBox}" x:Key="TbMinimalBase" >
            <Setter Property="BorderBrush" Value="#67676B"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="TbMinManageBarCount" BasedOn="{StaticResource TbMinimalBase}">
            <Setter Property="FontSize" Value="22"/>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="TbMinimalStyle" BasedOn="{StaticResource TbMinimalBase}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        
        <Style TargetType="{x:Type Button}" x:Key="BtnTitle">
            <Setter Property="Width" Value="45"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#137CD2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#0062B8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="BtnManageBarMinus">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Grid >
                            <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"></Rectangle>
                            <Rectangle Height="1.5" Width="13" Fill="#2196F3"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="BtnManageBarPlus">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Grid >
                            <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"></Rectangle>
                            <Rectangle Height="1" Width="13" Fill="#2196F3"/>
                            <Rectangle Height="13" Width="1" Fill="#2196F3"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="BtnManageRightMenu">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Grid Width="30" Height="30">
                            <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>
                            <Rectangle Margin="10,20,10,0" Height="2"  VerticalAlignment="Top" Fill="#2196F3"/>
                            <Rectangle Margin="7,15,7,0" Height="2"  VerticalAlignment="Top" Fill="#2196F3"/>
                            <Rectangle Margin="10,10,10,0" Height="2"  VerticalAlignment="Top" Fill="#2196F3"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="BtnRandom">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Grid Width="25" Height="25" RenderTransformOrigin=".5,.5">
                            
                            <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>
                            <Grid Background="#2D2D30" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,6,0,0"/>
                            <Polygon x:Name="border2" Fill="#2196F3" Points="0, 0, 6, 6, 12, 0" Margin="1,0,0,0">
                                <Polygon.RenderTransform>
                                    <RotateTransform Angle="40"></RotateTransform>
                                </Polygon.RenderTransform>
                            </Polygon>
                                                        
                            <Grid.RenderTransform>
                                <RotateTransform x:Name="AnimatedRotateTransform" Angle="0"/>
                            </Grid.RenderTransform>
                            
                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="MouseDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="AnimatedRotateTransform" 
                                                             Storyboard.TargetProperty="Angle" 
                                                             By="10" To="-360" Duration="0:0:0.5" 
                                                             FillBehavior="Stop"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Stroke" TargetName="border2" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="Green"/>
                                <Setter Property="Stroke" TargetName="border2" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                                <Setter Property="Stroke" TargetName="border2" Value="Brown"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="BtnPlay">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Grid Width="30" Height="30" RenderTransformOrigin=".5,.5">

                            <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>
                            <Polygon x:Name="border2" Fill="#2196F3" Points="0, 0, 0, 14, 12, 7" 
                                     VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,0,0,0"/>


                            <!--<Grid.RenderTransform>
                                <RotateTransform x:Name="AnimatedRotateTransform" Angle="0"/>
                            </Grid.RenderTransform>

                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="MouseDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="AnimatedRotateTransform" 
                                                             Storyboard.TargetProperty="Angle" 
                                                             By="10" To="-360" Duration="0:0:0.5" 
                                                             FillBehavior="Stop"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>-->
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Stroke" TargetName="border2" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="Green"/>
                                <Setter Property="Fill" TargetName="border2" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                                <Setter Property="Fill" TargetName="border2" Value="Brown"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="BtnPlayMetronom">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Grid Width="30" Height="30">

                            <Rectangle x:Name="border" RadiusX="20" RadiusY="20" Stroke="#2196F3" StrokeThickness="2"/>

                            <Polygon Fill="Orange" Points="0, 0, 0, 10, 7, 5" 
                                     VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,0,0"/>

                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20">
                                <Polyline Stroke="Orange" Points="4,19,  4,4,  10,12,  16,4,  16,19" StrokeThickness="2"/>
                            </Grid>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="#1E1E1E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="border" Value="Brown"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="BtnTaskCollRemove">
            <Setter Property="Width" Value="35"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3E3E42"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#0062B8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style TargetType="{x:Type Label}" x:Key="BarMenuLbl">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type Label}" x:Key="MainLbl">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="120"/>
        </Style>
        
    </Window.Resources>
    
    <Window.Triggers>

        <!--<EventTrigger RoutedEvent="Button.Click" SourceName="BtnRightMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseTaskColl}"/>
        </EventTrigger>

        <EventTrigger RoutedEvent="Button.Click" SourceName="BtnRightMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenTaskColl}"/>
        </EventTrigger>-->
        
    </Window.Triggers>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Grid.ColumnSpan="2" Background="#1E1E1E" MouseLeftButtonDown="WindowMove" MouseMove="TitleBarMouseMove">
                <Rectangle Height="5"  VerticalAlignment="Top" Fill="#2196F3"/>
                <Polygon Fill="#2196F3" Points="70,0 250,0 250,30 100,30"  HorizontalAlignment="Right" />

                <Label Content="Coordination training" VerticalAlignment="Center" FontSize="18" Foreground="#2196F3" Margin="50,0" FontFamily="Segoe UI Semibold"/>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0, 0, 0, 3">

                    <Button Name="btnWindowWrap" Style="{StaticResource BtnTitle}"  Click="BtnWindowWrap_Click">
                        <Grid Margin="15,10,15,0">
                            <Line Y1="0" X2="1" Stroke="Black" Stretch="Fill" StrokeThickness="1.3"/>
                        </Grid>
                    </Button>

                    <Button Name="btnWindowExtend" Style="{StaticResource BtnTitle}" 
                            Click="BtnWindowExtend_Click">
                        <Grid>
                            <Polygon Stroke="Black" Points="5,-4,  5,8,  14,8, 14,-4"/>
                            <Polygon Fill="#2196F3" Stroke="Black" Points="0,0,  0,12,  10,12, 10,0"/>
                        </Grid>
                    </Button>

                    <Button Style="{StaticResource BtnTitle}" Click="CloseWindow">
                        <Grid>
                            <Line X1="0" Y1="0" X2="13" Y2="13" Stroke="Black" StrokeThickness="1.5"/>
                            <Line X1="0" Y1="13" X2="13" Y2="0" Stroke="Black" StrokeThickness="1.5"/>
                        </Grid>
                    </Button>

                </StackPanel>

            </Grid>

            <Grid x:Name="GridBar" Grid.Row="1" Grid.ColumnSpan="2" Background="#2D2D30" >

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="50,0,0,0">

                    <Button x:Name="BtnAmplitudeMinus" Width="25" Height="25" Style="{StaticResource BtnManageBarMinus}"
                            Click="BtnSAmplitude_Click"/>

                    <TextBox x:Name="txtAmplitude" Width="40" MaxLength="3" VerticalAlignment="Center" Text="1,0"
                             Style="{StaticResource TbMinManageBarCount}" IsReadOnly="True" ToolTip="Такт ( Частота ) "/>

                    <Button x:Name="BtnAmplitudePlus" Style="{StaticResource BtnManageBarPlus}" Click="BtnSAmplitude_Click"/>

                    <Grid Width="50"/>
                    
                    <Button x:Name="BtnRepeatMinus" Width="25" Height="25" Style="{StaticResource BtnManageBarMinus}"
                            Click="BtnSRepeat_Click"/>
                    
                    <TextBox x:Name="txtRepeat" Width="25" MaxLength="1" VerticalAlignment="Center" Text="2" 
                             Style="{StaticResource TbMinManageBarCount}" IsReadOnly="True" Margin="5,0" />

                    <Button x:Name="BtnRepeatPlus" Style="{StaticResource BtnManageBarPlus}" Click="BtnSRepeat_Click"/>
                    
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">

                    <Button x:Name="PlayMetronom" Style="{StaticResource BtnPlayMetronom}" 
                            Margin="5,0" ToolTip="Запустить/Отключить метроном" Click="PlayMetronom_Click"/>

                    <Button x:Name="PlayStop" Click="PlayStop_Click" Style="{StaticResource BtnPlay}" 
                            Margin="0,0,50,0" ToolTip="Начать тренировку"/>

                    <Button x:Name="BtnRandom" Click="BtnRandom_Click" Style="{StaticResource BtnRandom}" 
                            Margin="5,0" ToolTip="Обновить тренировку"/>

                    <Button x:Name="BtnAddToColl" Click="BtnAddToColl_Click" Style="{StaticResource BtnManageBarPlus}" 
                            Margin="5,0" ToolTip="Добавить в тренировочный лист"/>


                </StackPanel>

                <Grid HorizontalAlignment="Right" Width="270">

                    <Button x:Name="BtnRightMenu" HorizontalAlignment="Right" 
                            Width="35" Height="35" Margin="0, 0, 10, 0" Click="RightMenu_Click" 
                            Style="{StaticResource BtnManageRightMenu}"/>

                </Grid>
            </Grid>

            <Grid Grid.Row="2" Grid.Column="0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" x:Name="GridHand" Width="1230">

                    <Label x:Name="lblTactCount" VerticalAlignment="Top" HorizontalAlignment="Center" 
                           Style="{StaticResource MainLbl}" FontSize="80" Margin="0,0,0,30" Foreground="#2196F3"/>

                    <Label Content="Р:" VerticalAlignment="Bottom" HorizontalAlignment="Left" 
                           Style="{StaticResource MainLbl}" FontSize="60" Margin="0,0,0,30"/>

                    <StackPanel x:Name="spHand" Orientation="Horizontal" VerticalAlignment="Bottom" 
                                HorizontalAlignment="Left" Margin="100,0,0,0">
                        
                        <Label x:Name="H1" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H2" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H3" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H4" Content="R" Style="{StaticResource MainLbl}" Margin="0,0,50,0"/>

                        <Label x:Name="H5" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H6" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H7" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H8" Content="R" Style="{StaticResource MainLbl}" Margin="0,0,50,0"/>

                        <Label x:Name="H9" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H10" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H11" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="H12" Content="R" Style="{StaticResource MainLbl}"/>
                                                
                    </StackPanel>
                    
                </Grid>

                <Grid Grid.Row="1" x:Name="GridLeg" Width="1230">
                    
                    <Label Content="Н:" VerticalAlignment="Top" HorizontalAlignment="Left" 
                           Style="{StaticResource MainLbl}" FontSize="60" Margin="0, 40, 0, 0"/>

                    <StackPanel x:Name="spLeg" Orientation="Horizontal" VerticalAlignment="Top"
                                HorizontalAlignment="Left" Margin="100,0,0,0">

                        <Label x:Name="L1" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L2" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L3" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L4" Content="R" Style="{StaticResource MainLbl}" Margin="0,0,50,0"/>

                        <Label x:Name="L5" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L6" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L7" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L8" Content="R" Style="{StaticResource MainLbl}" Margin="0,0,50,0"/>

                        <Label x:Name="L9" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L10" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L11" Content="R" Style="{StaticResource MainLbl}"/>
                        <Label x:Name="L12" Content="R" Style="{StaticResource MainLbl}"/>

                    </StackPanel>
                </Grid>

                <Grid Grid.RowSpan="2" Width="0" x:Name="GridRightMenu" 
                      Background="#2D2D30" HorizontalAlignment="Right">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="200"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Background="#2196F3">
                        <Label Content="Настройки" FontSize="20" HorizontalAlignment="Center" Foreground="#1E1E1E"/>
                    </Grid>

                    <Grid Grid.Row="1">
                        <StackPanel Orientation="Vertical">
                            <Grid Height="50">
                                <TextBlock Text="Использовать метроном в начале тренировки"
                                           Style="{StaticResource tbSettingsMenu}"/>
                                <CheckBox x:Name="cbMetronom"  Margin="220,0,0,0"
                                          VerticalAlignment="Center" HorizontalAlignment="Left"
                                          Click="cbMetronom_Click"/>
                            </Grid>

                            <Grid Background="#2196F3" Height="1"/>

                            <Grid Height="50">
                                <TextBlock Text="Подсветка текста при тренеровке"
                                           Style="{StaticResource tbSettingsMenu}"/>
                                <xctk:ColorPicker Name="cpIllumination" Width="40" Height="20"
                                                  HorizontalAlignment="Left" Margin="210,0,0,0"
                                                  SelectedColorChanged="cpIllumination_SelectedColorChanged"/>

                            </Grid>

                            <Grid Background="#2196F3" Height="1"/>
                            
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Row="2" Background="#2196F3">
                        <Label Content="Свой лист" FontSize="20" HorizontalAlignment="Center" Foreground="#1E1E1E"/>
                    </Grid>

                    <ListBox x:Name="LbTaskColl" Background="Transparent" Grid.Row="3" 
                             BorderBrush="Transparent" ItemsSource="{Binding g_PlayListColl}" 
                             SelectionChanged="LbTaskColl_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Width="240" Height="40" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="35"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0">
                                        <Button x:Name="BtnRemoveTaskFromColl" Style="{StaticResource BtnTaskCollRemove}"
                                            ToolTip="Удалить текущую треню" Click="BtnRemoveTaskFromColl_Click">
                                            <Image Source="Resources\remove.png"/>
                                        </Button>
                                    </Grid>

                                    <Grid Grid.Column="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="1"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <TextBlock  FontSize="16" Grid.Row="0" Text="{Binding AllHand}"
                                                HorizontalAlignment="Center"
                                                Style="{StaticResource tbSettingsMenu}"/>

                                        <Grid Background="White" Grid.Row="1" Margin="30,0"/>

                                        <TextBlock  FontSize="16" Grid.Row="2" Text="{Binding AllLeg}"
                                                HorizontalAlignment="Center" 
                                                Style="{StaticResource tbSettingsMenu}"/>
                                    </Grid>

                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </Grid>
                
            </Grid>

        </Grid>
          
    </Grid>
</Window>
